{"version":3,"file":"LazyImage-BIq5ArGy.js","sources":["../src/shadcn-ui/custom/spinner.tsx","../src/images/LazyImage.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport React from 'react';\n\nimport { SpriteIcon } from '../../images/SpriteIcon';\nimport type { IconName } from '../@types/lucide-sprites';\nimport svgSpriteUrl from '../assets/lucide-sprites.svg?url';\n\nexport function Spinner({ className }: { className?: string }) {\n  return <SpriteIcon<IconName> id=\"Loader\" url={svgSpriteUrl} className={clsx(className, 'animate-spin')} />;\n}\n","import clsx from 'clsx';\nimport React from 'react';\nimport { Await } from 'react-router';\n\nimport { Spinner } from '../shadcn-ui/custom/spinner';\nimport type { ImageData, LazyGalleryProps, LazyImageProps } from './@types/LazyImage.types';\n\nexport const imageLoader = async (filenames: Record<string, () => Promise<unknown>>) => {\n  return Object.keys(filenames).map(filePath => filePath.replace(/.*\\/(.*)/, '$1'));\n};\n\nexport const createRemoteImagePromise = (src: string, alt: string, width?: number, height?: number): Promise<ImageData> => {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => { resolve({ src, alt, width: width || img.naturalWidth, height: height || img.naturalHeight, loading: 'lazy' }); };\n    img.onerror = () => { reject(new Error(`Failed to load image: ${src}`)); };\n    img.src = src;\n  });\n};\n\nexport function LazyImage({ image, src, alt, width, height, className, fallback = <Spinner /> }: LazyImageProps) {\n  const imagePromise = image || (src ? createRemoteImagePromise(src, alt || '', width, height) : null);\n\n  if (!imagePromise) {\n    return <div className=\"text-slate-500/50\">Error: No image source provided</div>;\n  }\n\n  return (\n    <React.Suspense fallback={fallback}>\n      <TypedAwait<ImageData> resolve={imagePromise} errorElement={<Spinner className=\"text-slate-500/50\" />}>\n        {(imageData: ImageData) => <ImageElement {...imageData} className={clsx(imageData.className, className)} />}\n      </TypedAwait>\n    </React.Suspense>\n  );\n}\n\nexport function LazyGallery({ images, className, imageClass, fallback = <Spinner className=\"h-[180px]\" /> }: LazyGalleryProps) {\n  return (\n    <div className={className}>\n      {images.map(imgPromise => (\n        <LazyImage image={imgPromise} className={imageClass} fallback={fallback} />\n      ))}\n    </div>\n  );\n}\n\nfunction TypedAwait<T>({ resolve, children, ...props }: { resolve: Promise<T>; children: (data: T) => React.ReactNode;[key: string]: unknown }) {\n  return (\n    <Await resolve={resolve} {...props}>\n      {data => children(data as T)}\n    </Await>\n  );\n}\n\nconst ImageElement: React.FC<ImageData> = ({ src, alt, width, height, className, loading = 'lazy' }) => {\n  return <img src={src} alt={alt} width={width} height={height} className={className} loading={loading} decoding=\"async\" />;\n};\n"],"names":["Spinner","className","jsx","SpriteIcon","svgSpriteUrl","clsx","imageLoader","filenames","filePath","createRemoteImagePromise","src","alt","width","height","resolve","reject","img","LazyImage","image","fallback","imagePromise","React","TypedAwait","imageData","ImageElement","LazyGallery","images","imageClass","imgPromise","children","props","Await","data","loading"],"mappings":";;;;;AAOO,SAASA,EAAQ,EAAE,WAAAC,KAAqC;AAC7D,SAAOC,gBAAAA,MAACC,GAAA,EAAqB,IAAG,UAAS,KAAKC,GAAc,WAAWC,EAAKJ,GAAW,cAAc,EAAA,CAAG;AAC1G;ACFO,MAAMK,IAAc,OAAOC,MACzB,OAAO,KAAKA,CAAS,EAAE,IAAI,OAAYC,EAAS,QAAQ,YAAY,IAAI,CAAC,GAGrEC,IAA2B,CAACC,GAAaC,GAAaC,GAAgBC,MAC1E,IAAI,QAAQ,CAACC,GAASC,MAAW;AACtC,QAAMC,IAAM,IAAI,MAAA;AAChB,EAAAA,EAAI,SAAS,MAAM;AAAE,IAAAF,EAAQ,EAAE,KAAAJ,GAAK,KAAAC,GAAK,OAAOC,KAASI,EAAI,cAAc,QAAQH,KAAUG,EAAI,eAAe,SAAS,QAAQ;AAAA,EAAG,GACpIA,EAAI,UAAU,MAAM;AAAE,IAAAD,EAAO,IAAI,MAAM,yBAAyBL,CAAG,EAAE,CAAC;AAAA,EAAG,GACzEM,EAAI,MAAMN;AACZ,CAAC;AAGI,SAASO,EAAU,EAAE,OAAAC,GAAO,KAAAR,GAAK,KAAAC,GAAK,OAAAC,GAAO,QAAAC,GAAQ,WAAAZ,GAAW,UAAAkB,IAAWjB,gBAAAA,EAAAA,IAACF,GAAA,CAAA,CAAQ,EAAA,GAAsB;AAC/G,QAAMoB,IAAeF,MAAUR,IAAMD,EAAyBC,GAAKC,KAAO,IAAIC,GAAOC,CAAM,IAAI;AAE/F,SAAKO,IAKHlB,gBAAAA,EAAAA,IAACmB,EAAM,UAAN,EAAe,UAAAF,GACd,UAAAjB,gBAAAA,EAAAA,IAACoB,GAAA,EAAsB,SAASF,GAAc,cAAclB,gBAAAA,EAAAA,IAACF,GAAA,EAAQ,WAAU,oBAAA,CAAoB,GAChG,UAAA,CAACuB,MAAyBrB,gBAAAA,EAAAA,IAACsB,GAAA,EAAc,GAAGD,GAAW,WAAWlB,EAAKkB,EAAU,WAAWtB,CAAS,EAAA,CAAG,EAAA,CAC3G,GACF,IAROC,gBAAAA,EAAAA,IAAC,OAAA,EAAI,WAAU,qBAAoB,UAAA,mCAA+B;AAU7E;AAEO,SAASuB,EAAY,EAAE,QAAAC,GAAQ,WAAAzB,GAAW,YAAA0B,GAAY,UAAAR,IAAWjB,gBAAAA,MAACF,GAAA,EAAQ,WAAU,YAAA,CAAY,EAAA,GAAwB;AAC7H,SACEE,gBAAAA,EAAAA,IAAC,OAAA,EAAI,WAAAD,GACF,UAAAyB,EAAO,IAAI,CAAAE,MACV1B,gBAAAA,EAAAA,IAACe,GAAA,EAAU,OAAOW,GAAY,WAAWD,GAAY,UAAAR,EAAA,CAAoB,CAC1E,GACH;AAEJ;AAEA,SAASG,EAAc,EAAE,SAAAR,GAAS,UAAAe,GAAU,GAAGC,KAAiG;AAC9I,SACE5B,gBAAAA,MAAC6B,KAAM,SAAAjB,GAAmB,GAAGgB,GAC1B,UAAA,CAAAE,MAAQH,EAASG,CAAS,EAAA,CAC7B;AAEJ;AAEA,MAAMR,IAAoC,CAAC,EAAE,KAAAd,GAAK,KAAAC,GAAK,OAAAC,GAAO,QAAAC,GAAQ,WAAAZ,GAAW,SAAAgC,IAAU,aAClF/B,gBAAAA,MAAC,SAAI,KAAAQ,GAAU,KAAAC,GAAU,OAAAC,GAAc,QAAAC,GAAgB,WAAAZ,GAAsB,SAAAgC,GAAkB,UAAS,QAAA,CAAQ;"}