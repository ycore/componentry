{"version":3,"file":"ThemeSwitch-C54MZyox.js","sources":["../src/impetus/LoadingBar.tsx","../src/shadcn-ui/custom/link.tsx","../src/impetus/ThemeSwitch.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport { memo } from 'react';\n\nexport const LoadingBar = memo<{ className?: string }>(({ className }) => <div className={clsx(\"loading-bar\", className)} />);\n","import React from 'react';\nimport { type LinkProps, Link as RouterLink } from 'react-router';\n\nexport const Link = React.forwardRef(function Link(props: { href: string | LinkProps['to'] } & Omit<LinkProps, 'to'>, ref: React.ForwardedRef<HTMLAnchorElement>) {\n  return (\n    <RouterLink {...props} to={props.href} ref={ref} />\n  );\n});\n","import clsx from 'clsx';\nimport { useTheme } from 'next-themes';\nimport type { MouseEvent } from 'react';\nimport { useEffect, useState } from 'react';\nimport { createSpriteIcon } from '../images/SpriteIcon';\nimport type { IconName } from '../shadcn-ui/@types/lucide-sprites';\nimport svgSpriteUrl from '../shadcn-ui/assets/lucide-sprites.svg?url';\nimport type { Themes } from './@types/ThemeSwitch.types';\n\nconst SpriteIcon = createSpriteIcon<IconName>(svgSpriteUrl);\nexport const THEME_OPTIONS = { theme: { light: 'light', dark: 'dark' } };\n\ninterface ThemeSwitchProps {\n  theme: Themes;\n  className?: string;\n  classTheme?: string;\n}\n\nexport const ThemeSwitch = ({ theme = THEME_OPTIONS, className, classTheme }: ThemeSwitchProps) => {\n  const [mounted, setMounted] = useState(false);\n  const { resolvedTheme, setTheme } = useTheme();\n  useEffect(() => setMounted(true), []);\n\n  if (!mounted) return null;\n  return (\n    <button\n      type=\"button\"\n      className={clsx(\"size-5 hover:animate-rotate\", classTheme)}\n      onClick={(e: MouseEvent) => {\n        setTheme(resolvedTheme === theme.theme.dark ? theme.theme.light : theme.theme.dark);\n        e.preventDefault();\n        e.stopPropagation();\n      }}\n      aria-label=\"theme switch\"\n    >\n      {resolvedTheme === theme.theme.dark ? <SpriteIcon id=\"Moon\" className={clsx('size-5', className)} /> : <SpriteIcon id=\"Sun\" className={clsx('size-5', className)} />}\n    </button>\n  );\n};\n"],"names":["LoadingBar","memo","className","jsx","clsx","Link","React","props","ref","RouterLink","SpriteIcon","createSpriteIcon","svgSpriteUrl","THEME_OPTIONS","ThemeSwitch","theme","classTheme","mounted","setMounted","useState","resolvedTheme","setTheme","useTheme","useEffect","e"],"mappings":";;;;;;AAGO,MAAMA,IAAaC,EAA6B,CAAC,EAAE,WAAAC,EAAA,MAAgBC,gBAAAA,EAAAA,IAAC,OAAA,EAAI,WAAWC,EAAK,eAAeF,CAAS,GAAG,CAAE,GCA/GG,IAAOC,EAAM,WAAW,SAAcC,GAAmEC,GAA4C;AAChK,+BACGC,GAAA,EAAY,GAAGF,GAAO,IAAIA,EAAM,MAAM,KAAAC,GAAU;AAErD,CAAC,GCEKE,IAAaC,EAA2BC,CAAY,GAC7CC,IAAgB,EAAE,OAAO,EAAE,OAAO,SAAS,MAAM,SAAO,GAQxDC,IAAc,CAAC,EAAE,OAAAC,IAAQF,GAAe,WAAAX,GAAW,YAAAc,QAAmC;AACjG,QAAM,CAACC,GAASC,CAAU,IAAIC,EAAS,EAAK,GACtC,EAAE,eAAAC,GAAe,UAAAC,EAAA,IAAaC,EAAA;AAGpC,SAFAC,EAAU,MAAML,EAAW,EAAI,GAAG,CAAA,CAAE,GAE/BD,IAEHd,gBAAAA,EAAAA;AAAAA,IAAC;AAAA,IAAA;AAAA,MACC,MAAK;AAAA,MACL,WAAWC,EAAK,+BAA+BY,CAAU;AAAA,MACzD,SAAS,CAACQ,MAAkB;AAC1B,QAAAH,EAASD,MAAkBL,EAAM,MAAM,OAAOA,EAAM,MAAM,QAAQA,EAAM,MAAM,IAAI,GAClFS,EAAE,eAAA,GACFA,EAAE,gBAAA;AAAA,MACJ;AAAA,MACA,cAAW;AAAA,MAEV,UAAAJ,MAAkBL,EAAM,MAAM,6BAAQL,GAAA,EAAW,IAAG,QAAO,WAAWN,EAAK,UAAUF,CAAS,EAAA,CAAG,0BAAMQ,GAAA,EAAW,IAAG,OAAM,WAAWN,EAAK,UAAUF,CAAS,EAAA,CAAG;AAAA,IAAA;AAAA,EAAA,IAZjJ;AAevB;"}