{
  "version": 3,
  "sources": ["../../src/impetus/index.ts", "../../src/impetus/LoadingBar.tsx", "../../src/impetus/Page.tsx", "../../src/shadcn-ui/custom/link.tsx", "../../src/impetus/ThemeSwitch.tsx", "../../src/images/SpriteIcon.tsx", "url-asset:../shadcn-ui/assets/lucide-sprites.svg"],
  "sourcesContent": [
    "export { ThemeProvider } from 'next-themes';\nexport { LoadingBar } from './LoadingBar';\nexport { Footer, Header } from './Page';\nexport { THEME_OPTIONS, ThemeSwitch } from './ThemeSwitch';\n",
    "import clsx from 'clsx';\nimport { memo } from 'react';\n\nexport const LoadingBar = memo<{ className?: string }>(({ className }) => <div className={clsx(\"loading-bar\", className)} />);\n",
    "import clsx from 'clsx';\nimport type { PropsWithChildren } from 'react';\n\nimport { Link } from '../shadcn-ui/custom/link';\n\ntype HeaderProps = PropsWithChildren & {\n  className?: string;\n};\n\ntype FooterProps = PropsWithChildren & {\n  className?: string;\n};\n\nexport function Header({ children, className }: HeaderProps) {\n  return (\n    <header className=\"print:hidden\">\n      <Link href=\"/\">\n        <div className=\"flex flex-col md:py-8 md:pl-8\">\n          <div className={clsx('flew-row flex w-full justify-around md:justify-start md:gap-x-8', className)}>{children}</div>\n        </div>\n      </Link>\n    </header>\n  );\n}\n\nexport function Footer({ children, className }: FooterProps) {\n  return (\n    <footer className=\"sticky top-[100vh] flex w-full flex-col items-center bg-opacity-100 pt-12 pb-8 print:hidden\">\n      <p className={clsx('text-xs uppercase text-opacity-30', className)}>{children}</p>\n    </footer>\n  );\n}\n",
    "import React from 'react';\nimport { type LinkProps, Link as RouterLink } from 'react-router';\n\nexport const Link = React.forwardRef(function Link(props: { href: string | LinkProps['to'] } & Omit<LinkProps, 'to'>, ref: React.ForwardedRef<HTMLAnchorElement>) {\n  return (\n    <RouterLink {...props} to={props.href} ref={ref} />\n  );\n});\n",
    "import clsx from 'clsx';\nimport { useTheme } from 'next-themes';\nimport type { MouseEvent } from 'react';\nimport { useEffect, useState } from 'react';\nimport { createSpriteIcon } from '../images/SpriteIcon';\nimport type { IconName } from '../shadcn-ui/@types/lucide-sprites';\nimport svgSpriteUrl from '../shadcn-ui/assets/lucide-sprites.svg?url';\nimport type { Themes } from './@types/ThemeSwitch.types';\n\nconst SpriteIcon = createSpriteIcon<IconName>(svgSpriteUrl);\nexport const THEME_OPTIONS = { theme: { light: 'light', dark: 'dark' } };\n\ninterface ThemeSwitchProps {\n  theme: Themes;\n  className?: string;\n  classTheme?: string;\n}\n\nexport const ThemeSwitch = ({ theme = THEME_OPTIONS, className, classTheme }: ThemeSwitchProps) => {\n  const [mounted, setMounted] = useState(false);\n  const { resolvedTheme, setTheme } = useTheme();\n  useEffect(() => setMounted(true), []);\n\n  if (!mounted) return null;\n  return (\n    <button\n      type=\"button\"\n      className={clsx(\"size-5 hover:animate-rotate\", classTheme)}\n      onClick={(e: MouseEvent) => {\n        setTheme(resolvedTheme === theme.theme.dark ? theme.theme.light : theme.theme.dark);\n        e.preventDefault();\n        e.stopPropagation();\n      }}\n      aria-label=\"theme switch\"\n    >\n      {resolvedTheme === theme.theme.dark ? <SpriteIcon id=\"Moon\" className={clsx('size-5', className)} /> : <SpriteIcon id=\"Sun\" className={clsx('size-5', className)} />}\n    </button>\n  );\n};\n",
    "import React from 'react';\nimport type { SpriteIconProps } from './@types/SpriteIcon.types';\n\n/**\n * Renders an SVG icon using a sprite sheet.\n *\n * @template IconId - The type of the icon ID within the sprite sheet (defaults to string).\n * @param props - The properties for the SpriteIcon component.\n * @param props.url - The URL of the SVG sprite sheet.\n * @param props.id - The ID of the icon within the sprite sheet. If not provided, the entire sprite is used.\n * @returns An SVG element referencing the specified icon from the sprite sheet.\n */\nexport function SpriteIcon<IconId extends string = string>({ url, id, ...props }: SpriteIconProps<string, IconId>) {\n  return (\n    // biome-ignore lint/a11y/noSvgWithoutTitle: acceptable\n    <svg {...props}>{id ? <use href={`${url}#${id}`} /> : <use href={`${url}`} />}</svg>\n  );\n}\n\n/**\n * Creates a pre-configured SpriteIcon component bound to a specific sprite URL.\n *\n * @template IconId - The type of sprite icon IDs available in the sprite sheet\n * @param spriteUrl - The URL of the SVG sprite sheet\n * @returns A configured SpriteIcon component that only requires the icon ID\n */\nexport function createSpriteIcon<IconId extends string>(spriteUrl: string) {\n  return function SpriteIconComponent({ id, ...props }: { id: IconId } & Omit<SpriteIconProps<string, IconId>, 'url'>) {\n    return <SpriteIcon url={spriteUrl} id={id} {...props} />;\n  };\n}\n",
    "export default \"./../shadcn-ui/assets/lucide-sprites.svg\";"
  ],
  "mappings": ";AAAA;;;ACAA;AACA;AAAA;AAEO,IAAM,aAAa,KAA6B,GAAG,gCAAgB,IAAC,OAAD;AAAA,EAAK,WAAW,KAAK,eAAe,SAAS;AAAA,CAAG,CAAE;;ACH5H;;;ACAA;AACA,iBAAyB;AAAA;AAElB,IAAM,OAAO,MAAM,WAAW,SAAS,KAAI,CAAC,OAAmE,KAA4C;AAAA,EAChK,uBACE,KAAC,YAAD;AAAA,OAAgB;AAAA,IAAO,IAAI,MAAM;AAAA,IAAM;AAAA,GAAU;AAAA,CAEpD;;;;ADMM,SAAS,MAAM,GAAG,UAAU,aAA0B;AAAA,EAC3D,uBACE,KAME,UANF;AAAA,IAAQ,WAAU;AAAA,IAAlB,0BACE,KAIE,MAJF;AAAA,MAAM,MAAK;AAAA,MAAX,0BACE,KAEE,OAFF;AAAA,QAAK,WAAU;AAAA,QAAf,0BACE,KAAgH,OAAhH;AAAA,UAAK,WAAW,MAAK,mEAAmE,SAAS;AAAA,UAAjG;AAAA,SAAgH;AAAA,OAChH;AAAA,KACF;AAAA,GACF;AAAA;AAIC,SAAS,MAAM,GAAG,UAAU,aAA0B;AAAA,EAC3D,uBACE,KAEE,UAFF;AAAA,IAAQ,WAAU;AAAA,IAAlB,0BACE,KAAgF,KAAhF;AAAA,MAAG,WAAW,MAAK,qCAAqC,SAAS;AAAA,MAAjE;AAAA,KAAgF;AAAA,GAChF;AAAA;;AE7BN;AACA;AAEA;;;;ACSO,SAAS,UAA0C,GAAG,KAAK,OAAO,SAA0C;AAAA,EACjH,uBAEE,KAAgF,OAAhF;AAAA,OAAS;AAAA,IAAT,UAAiB,qBAAK,KAAC,OAAD;AAAA,MAAK,MAAM,GAAG,OAAO;AAAA,KAAM,oBAAK,KAAC,OAAD;AAAA,MAAK,MAAM,GAAG;AAAA,KAAO;AAAA,GAAK;AAAA;AAW7E,SAAS,gBAAuC,CAAC,WAAmB;AAAA,EACzE,OAAO,SAAS,mBAAmB,GAAG,OAAO,SAAwE;AAAA,IACnH,uBAAO,KAAC,YAAD;AAAA,MAAY,KAAK;AAAA,MAAW;AAAA,SAAY;AAAA,KAAO;AAAA;AAAA;;;AC5B1D,IAAe;;;;AFSf,IAAM,cAAa,iBAA2B,sBAAY;AACnD,IAAM,gBAAgB,EAAE,OAAO,EAAE,OAAO,SAAS,MAAM,OAAO,EAAE;AAQhE,IAAM,cAAc,GAAG,QAAQ,eAAe,WAAW,iBAAmC;AAAA,EACjG,OAAO,SAAS,cAAc,SAAS,KAAK;AAAA,EAC5C,QAAQ,eAAe,aAAa,SAAS;AAAA,EAC7C,UAAU,MAAM,WAAW,IAAI,GAAG,CAAC,CAAC;AAAA,EAEpC,KAAK;AAAA,IAAS,OAAO;AAAA,EACrB,uBACE,KAWE,UAXF;AAAA,IACE,MAAK;AAAA,IACL,WAAW,MAAK,+BAA+B,UAAU;AAAA,IACzD,SAAS,CAAC,MAAkB;AAAA,MAC1B,SAAS,kBAAkB,MAAM,MAAM,OAAO,MAAM,MAAM,QAAQ,MAAM,MAAM,IAAI;AAAA,MAClF,EAAE,eAAe;AAAA,MACjB,EAAE,gBAAgB;AAAA;AAAA,IAEpB,cAAW;AAAA,IARb,UAUG,kBAAkB,MAAM,MAAM,uBAAO,KAAC,aAAD;AAAA,MAAY,IAAG;AAAA,MAAO,WAAW,MAAK,UAAU,SAAS;AAAA,KAAG,oBAAK,KAAC,aAAD;AAAA,MAAY,IAAG;AAAA,MAAM,WAAW,MAAK,UAAU,SAAS;AAAA,KAAG;AAAA,GAClK;AAAA;",
  "debugId": "3012A9C3044CF2EA64756E2164756E21",
  "names": []
}