{
  "version": 3,
  "sources": ["../../../src/impetus/theme/ThemeProvider.tsx", "../../../src/impetus/theme/ThemeSwitch.tsx", "../../../src/impetus/theme/useTheme.tsx", "../../../src/impetus/theme/vendor.ts"],
  "sourcesContent": [
    "import type { ThemeProviderProps } from '../@types/ThemeProvider.types';\n\n// Default props for consistent setup\nexport const themeProviderProps: Partial<ThemeProviderProps> = {\n  attribute: 'class',\n  defaultTheme: 'light',\n  enableSystem: true,\n  disableTransitionOnChange: false,\n};\n",
    "import { SpriteIcon } from '@ycore/componentry/images';\nimport clsx from 'clsx';\nimport type { MouseEvent } from 'react';\nimport { useEffect, useState } from 'react';\nimport type { ThemeContext, ThemeSwitchProps, Themes } from '../@types/ThemeSwitch.types';\nimport { useTheme } from './useTheme';\n\nexport const THEME_OPTIONS: Themes = { theme: { light: 'light', dark: 'dark' } } as const;\n\n// Internal button component\nconst ThemeSwitchButton = ({ themeContext, theme, spriteUrl, className, classTheme }: { themeContext: ThemeContext | null; theme: Themes; spriteUrl: string; className?: string; classTheme?: string }) => {\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => setMounted(true), []);\n\n  const resolvedTheme = themeContext?.resolvedTheme;\n  const setTheme = themeContext?.setTheme;\n\n  if (!mounted) return null;\n  return (\n    <button\n      type=\"button\"\n      className={clsx('size-5 hover:animate-rotate', classTheme)}\n      onClick={(e: MouseEvent) => {\n        if (!setTheme) return;\n        setTheme(resolvedTheme === theme.theme.dark ? theme.theme.light : theme.theme.dark);\n        e.preventDefault();\n        e.stopPropagation();\n      }}\n      aria-label=\"theme switch\"\n    >\n      {resolvedTheme === theme.theme.dark ? <SpriteIcon spriteUrl={spriteUrl} iconId=\"Moon\" className={clsx('size-5', className)} /> : <SpriteIcon spriteUrl={spriteUrl} iconId=\"Sun\" className={clsx('size-5', className)} />}\n    </button>\n  );\n};\n\n// Main ThemeSwitch component with render props pattern\nexport const ThemeSwitch = ({ theme = THEME_OPTIONS, spriteUrl, className, classTheme, children }: ThemeSwitchProps) => {\n  const nextThemeContext = useTheme();\n  const themeContext: ThemeContext | null = nextThemeContext ? { resolvedTheme: nextThemeContext.resolvedTheme, setTheme: nextThemeContext.setTheme } : null;\n\n  // If children prop is provided, use render props pattern\n  if (children) {\n    return children({ themeContext, theme, spriteUrl, className, classTheme });\n  }\n\n  // Default behavior: render the button directly\n  return <ThemeSwitchButton themeContext={themeContext} theme={theme} spriteUrl={spriteUrl} className={className} classTheme={classTheme} />;\n};\n",
    "import { useTheme as useNextTheme } from 'next-themes';\n\n// Re-export the useTheme hook with the same interface\nexport const useTheme = useNextTheme;\n",
    "import { ThemeProvider as NextThemeProvider } from 'next-themes';\nexport const ThemeProvider = NextThemeProvider;\n"
  ],
  "mappings": ";AAGO,IAAM,qBAAkD;AAAA,EAC7D,WAAW;AAAA,EACX,cAAc;AAAA,EACd,cAAc;AAAA,EACd,2BAA2B;AAC7B;;ACRA;AACA;AAEA;;;ACHA,qBAAS;AAGF,IAAM,WAAW;;;;ADIjB,IAAM,gBAAwB,EAAE,OAAO,EAAE,OAAO,SAAS,MAAM,OAAO,EAAE;AAG/E,IAAM,oBAAoB,GAAG,cAAc,OAAO,WAAW,WAAW,iBAAmI;AAAA,EACzM,OAAO,SAAS,cAAc,SAAS,KAAK;AAAA,EAE5C,UAAU,MAAM,WAAW,IAAI,GAAG,CAAC,CAAC;AAAA,EAEpC,MAAM,gBAAgB,cAAc;AAAA,EACpC,MAAM,WAAW,cAAc;AAAA,EAE/B,IAAI,CAAC;AAAA,IAAS,OAAO;AAAA,EACrB,uBACE,IAYE,UAZF;AAAA,IACE,MAAK;AAAA,IACL,WAAW,KAAK,+BAA+B,UAAU;AAAA,IACzD,SAAS,CAAC,MAAkB;AAAA,MAC1B,IAAI,CAAC;AAAA,QAAU;AAAA,MACf,SAAS,kBAAkB,MAAM,MAAM,OAAO,MAAM,MAAM,QAAQ,MAAM,MAAM,IAAI;AAAA,MAClF,EAAE,eAAe;AAAA,MACjB,EAAE,gBAAgB;AAAA;AAAA,IAEpB,cAAW;AAAA,IATb,UAWG,kBAAkB,MAAM,MAAM,uBAAO,IAAC,YAAD;AAAA,MAAY;AAAA,MAAsB,QAAO;AAAA,MAAO,WAAW,KAAK,UAAU,SAAS;AAAA,KAAG,oBAAK,IAAC,YAAD;AAAA,MAAY;AAAA,MAAsB,QAAO;AAAA,MAAM,WAAW,KAAK,UAAU,SAAS;AAAA,KAAG;AAAA,GACtN;AAAA;AAKC,IAAM,cAAc,GAAG,QAAQ,eAAe,WAAW,WAAW,YAAY,eAAiC;AAAA,EACtH,MAAM,mBAAmB,SAAS;AAAA,EAClC,MAAM,eAAoC,mBAAmB,EAAE,eAAe,iBAAiB,eAAe,UAAU,iBAAiB,SAAS,IAAI;AAAA,EAGtJ,IAAI,UAAU;AAAA,IACZ,OAAO,SAAS,EAAE,cAAc,OAAO,WAAW,WAAW,WAAW,CAAC;AAAA,EAC3E;AAAA,EAGA,uBAAO,IAAC,mBAAD;AAAA,IAAmB;AAAA,IAA4B;AAAA,IAAc;AAAA,IAAsB;AAAA,IAAsB;AAAA,GAAwB;AAAA;;AE/C1I,0BAAS;AACF,IAAM,gBAAgB;",
  "debugId": "8038E8018C58BA8B64756E2164756E21",
  "names": []
}