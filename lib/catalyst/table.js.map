{"version":3,"file":"table.js","sourceRoot":"","sources":["../../../src/catalyst/table.tsx"],"names":[],"mappings":"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","sourcesContent":["import clsx from 'clsx';\nimport type React from 'react';\nimport { createContext, useContext, useState } from 'react';\n\nimport { Link } from './link.js';\n\nconst TableContext = createContext<{ bleed: boolean; dense: boolean; grid: boolean; striped: boolean }>({\n  bleed: false,\n  dense: false,\n  grid: false,\n  striped: false,\n});\n\nexport function Table({\n  bleed = false,\n  dense = false,\n  grid = false,\n  striped = false,\n  className,\n  children,\n  ...props\n}: { bleed?: boolean; dense?: boolean; grid?: boolean; striped?: boolean } & React.ComponentPropsWithoutRef<'div'>) {\n  return (\n    <TableContext.Provider value={{ bleed, dense, grid, striped } as React.ContextType<typeof TableContext>}>\n      <div className=\"flow-root\">\n        <div {...props} className={clsx(className, '-mx-(--gutter) overflow-x-auto whitespace-nowrap')}>\n          <div className={clsx('inline-block min-w-full align-middle', !bleed && 'sm:px-(--gutter)')}>\n            <table className=\"min-w-full text-left text-sm/6 text-zinc-950 dark:text-white\">{children}</table>\n          </div>\n        </div>\n      </div>\n    </TableContext.Provider>\n  );\n}\n\nexport function TableHead({ className, ...props }: React.ComponentPropsWithoutRef<'thead'>) {\n  return <thead {...props} className={clsx(className, 'text-zinc-500 dark:text-zinc-400')} />;\n}\n\nexport function TableBody(props: React.ComponentPropsWithoutRef<'tbody'>) {\n  return <tbody {...props} />;\n}\n\nconst TableRowContext = createContext<{ href?: string; target?: string; title?: string }>({\n  href: undefined,\n  target: undefined,\n  title: undefined,\n});\n\nexport function TableRow({ href, target, title, className, ...props }: { href?: string; target?: string; title?: string } & React.ComponentPropsWithoutRef<'tr'>) {\n  const { striped } = useContext(TableContext);\n\n  return (\n    <TableRowContext.Provider value={{ href, target, title } as React.ContextType<typeof TableRowContext>}>\n      <tr\n        {...props}\n        className={clsx(\n          className,\n          href && 'has-[[data-row-link][data-focus]]:-outline-offset-2 has-[[data-row-link][data-focus]]:outline-2 has-[[data-row-link][data-focus]]:outline-blue-500 dark:focus-within:bg-white/[2.5%]',\n          striped && 'even:bg-zinc-950/[2.5%] dark:even:bg-white/[2.5%]',\n          href && striped && 'hover:bg-zinc-950/5 dark:hover:bg-white/5',\n          href && !striped && 'hover:bg-zinc-950/[2.5%] dark:hover:bg-white/[2.5%]'\n        )}\n      />\n    </TableRowContext.Provider>\n  );\n}\n\nexport function TableHeader({ className, ...props }: React.ComponentPropsWithoutRef<'th'>) {\n  const { bleed, grid } = useContext(TableContext);\n\n  return (\n    <th\n      {...props}\n      className={clsx(\n        className,\n        'border-b border-b-zinc-950/10 px-4 py-2 font-medium first:pl-(--gutter,--spacing(2)) last:pr-(--gutter,--spacing(2)) dark:border-b-white/10',\n        grid && 'border-l border-l-zinc-950/5 first:border-l-0 dark:border-l-white/5',\n        !bleed && 'sm:last:pr-1 sm:first:pl-1'\n      )}\n    />\n  );\n}\n\nexport function TableCell({ className, children, ...props }: React.ComponentPropsWithoutRef<'td'>) {\n  const { bleed, dense, grid, striped } = useContext(TableContext);\n  const { href, target, title } = useContext(TableRowContext);\n  const [cellRef, setCellRef] = useState<HTMLElement | null>(null);\n\n  return (\n    <td\n      ref={href ? setCellRef : undefined}\n      {...props}\n      className={clsx(\n        className,\n        'relative px-4 first:pl-(--gutter,--spacing(2)) last:pr-(--gutter,--spacing(2))',\n        !striped && 'border-zinc-950/5 border-b dark:border-white/5',\n        grid && 'border-l border-l-zinc-950/5 first:border-l-0 dark:border-l-white/5',\n        dense ? 'py-2.5' : 'py-4',\n        !bleed && 'sm:last:pr-1 sm:first:pl-1'\n      )}\n    >\n      {href && <Link data-row-link href={href} target={target} aria-label={title} tabIndex={cellRef?.previousElementSibling === null ? 0 : -1} className=\"absolute inset-0 focus:outline-hidden\" />}\n      {children}\n    </td>\n  );\n}\n"]}