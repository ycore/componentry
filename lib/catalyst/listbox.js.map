{"version":3,"file":"listbox.js","sourceRoot":"","sources":["../../../src/catalyst/listbox.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as Headless from '@headlessui/react';\nimport clsx from 'clsx';\nimport { Fragment } from 'react';\nimport type React from 'react';\n\nexport function Listbox<T>({\n  className,\n  placeholder,\n  autoFocus,\n  'aria-label': ariaLabel,\n  children: options,\n  ...props\n}: {\n  className?: string;\n  placeholder?: React.ReactNode;\n  autoFocus?: boolean;\n  'aria-label'?: string;\n  children?: React.ReactNode;\n} & Omit<Headless.ListboxProps<typeof Fragment, T>, 'as' | 'multiple'>) {\n  return (\n    <Headless.Listbox {...props} multiple={false}>\n      <Headless.ListboxButton\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus={autoFocus}\n        data-slot=\"control\"\n        aria-label={ariaLabel}\n        className={clsx([\n          className,\n          // Basic layout\n          'group relative block w-full',\n          // Background color + shadow applied to inset pseudo element, so shadow blends with border in light mode\n          'before:absolute before:inset-px before:rounded-[calc(var(--radius-lg)-1px)] before:bg-white before:shadow-sm',\n          // Background color is moved to control and shadow is removed in dark mode so hide `before` pseudo\n          'dark:before:hidden',\n          // Hide default focus styles\n          'focus:outline-hidden',\n          // Focus ring\n          'after:pointer-events-none after:absolute after:inset-0 after:rounded-lg after:ring-transparent after:ring-inset data-focus:after:ring-2 data-focus:after:ring-blue-500',\n          // Disabled state\n          'data-disabled:opacity-50 data-disabled:before:bg-zinc-950/5 data-disabled:before:shadow-none',\n        ])}\n      >\n        <Headless.ListboxSelectedOption\n          as=\"span\"\n          options={options}\n          placeholder={placeholder && <span className=\"block truncate text-zinc-500\">{placeholder}</span>}\n          className={clsx([\n            // Basic layout\n            'relative block w-full appearance-none rounded-lg py-[calc(--spacing(2.5)-1px)] sm:py-[calc(--spacing(1.5)-1px)]',\n            // Set minimum height for when no value is selected\n            'min-h-11 sm:min-h-9',\n            // Horizontal padding\n            'pr-[calc(--spacing(7)-1px)] pl-[calc(--spacing(3.5)-1px)] sm:pl-[calc(--spacing(3)-1px)]',\n            // Typography\n            'text-left text-base/6 text-zinc-950 placeholder:text-zinc-500 sm:text-sm/6 dark:text-white forced-colors:text-[CanvasText]',\n            // Border\n            'border border-zinc-950/10 group-data-active:border-zinc-950/20 group-data-hover:border-zinc-950/20 dark:border-white/10 dark:group-data-active:border-white/20 dark:group-data-hover:border-white/20',\n            // Background color\n            'bg-transparent dark:bg-white/5',\n            // Invalid state\n            'group-data-hover:group-data-invalid:border-red-500 group-data-invalid:border-red-500 dark:group-data-invalid:border-red-600 dark:data-hover:group-data-invalid:border-red-600',\n            // Disabled state\n            'group-data-disabled:border-zinc-950/20 group-data-disabled:opacity-100 dark:group-data-disabled:border-white/15 dark:group-data-disabled:bg-white/[2.5%] dark:group-data-disabled:data-hover:border-white/15',\n          ])}\n        />\n        <span className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\n          <svg className=\"size-5 stroke-zinc-500 group-data-disabled:stroke-zinc-600 sm:size-4 dark:stroke-zinc-400 forced-colors:stroke-[CanvasText]\" viewBox=\"0 0 16 16\" aria-hidden=\"true\" fill=\"none\">\n            <path d=\"M5.75 10.75L8 13L10.25 10.75\" strokeWidth={1.5} strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n            <path d=\"M10.25 5.25L8 3L5.75 5.25\" strokeWidth={1.5} strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n          </svg>\n        </span>\n      </Headless.ListboxButton>\n      <Headless.ListboxOptions\n        transition\n        anchor=\"selection start\"\n        className={clsx(\n          // Anchor positioning\n          '[--anchor-offset:-1.625rem] [--anchor-padding:--spacing(4)] sm:[--anchor-offset:-1.375rem]',\n          // Base styles\n          'isolate w-max min-w-[calc(var(--button-width)+1.75rem)] select-none scroll-py-1 rounded-xl p-1',\n          // Invisible border that is only visible in `forced-colors` mode for accessibility purposes\n          'outline outline-transparent focus:outline-hidden',\n          // Handle scrolling when menu won't fit in viewport\n          'overflow-y-scroll overscroll-contain',\n          // Popover background\n          'bg-white/75 backdrop-blur-xl dark:bg-zinc-800/75',\n          // Shadows\n          'shadow-lg ring-1 ring-zinc-950/10 dark:ring-white/10 dark:ring-inset',\n          // Transitions\n          'transition-opacity duration-100 ease-in data-closed:data-leave:opacity-0 data-transition:pointer-events-none'\n        )}\n      >\n        {options}\n      </Headless.ListboxOptions>\n    </Headless.Listbox>\n  );\n}\n\nexport function ListboxOption<T>({ children, className, ...props }: { className?: string; children?: React.ReactNode } & Omit<Headless.ListboxOptionProps<'div', T>, 'as' | 'className'>) {\n  const sharedClasses = clsx(\n    // Base\n    'flex min-w-0 items-center',\n    // Icons\n    '*:data-[slot=icon]:size-5 *:data-[slot=icon]:shrink-0 sm:*:data-[slot=icon]:size-4',\n    '*:data-[slot=icon]:text-zinc-500 group-data-focus/option:*:data-[slot=icon]:text-white dark:*:data-[slot=icon]:text-zinc-400',\n    'forced-colors:*:data-[slot=icon]:text-[CanvasText] forced-colors:group-data-focus/option:*:data-[slot=icon]:text-[Canvas]',\n    // Avatars\n    '*:data-[slot=avatar]:-mx-0.5 *:data-[slot=avatar]:size-6 sm:*:data-[slot=avatar]:size-5'\n  );\n\n  return (\n    <Headless.ListboxOption as={Fragment} {...props}>\n      {({ selectedOption }) => {\n        if (selectedOption) {\n          return <div className={clsx(className, sharedClasses)}>{children}</div>;\n        }\n\n        return (\n          <div\n            className={clsx(\n              // Basic layout\n              'group/option grid cursor-default grid-cols-[--spacing(5)_1fr] items-baseline gap-x-2 rounded-lg py-2.5 pr-3.5 pl-2 sm:grid-cols-[--spacing(4)_1fr] sm:py-1.5 sm:pr-3 sm:pl-1.5',\n              // Typography\n              'text-base/6 text-zinc-950 sm:text-sm/6 dark:text-white forced-colors:text-[CanvasText]',\n              // Focus\n              'outline-hidden data-focus:bg-blue-500 data-focus:text-white',\n              // Forced colors mode\n              'forced-color-adjust-none forced-colors:data-focus:bg-[Highlight] forced-colors:data-focus:text-[HighlightText]',\n              // Disabled\n              'data-disabled:opacity-50'\n            )}\n          >\n            <svg className=\"relative hidden size-5 self-center stroke-current group-data-selected/option:inline sm:size-4\" viewBox=\"0 0 16 16\" fill=\"none\" aria-hidden=\"true\">\n              <path d=\"M4 8.5l3 3L12 4\" strokeWidth={1.5} strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n            </svg>\n            <span className={clsx(className, sharedClasses, 'col-start-2')}>{children}</span>\n          </div>\n        );\n      }}\n    </Headless.ListboxOption>\n  );\n}\n\nexport function ListboxLabel({ className, ...props }: React.ComponentPropsWithoutRef<'span'>) {\n  return <span {...props} className={clsx(className, 'ml-2.5 truncate first:ml-0 sm:ml-2 sm:first:ml-0')} />;\n}\n\nexport function ListboxDescription({ className, children, ...props }: React.ComponentPropsWithoutRef<'span'>) {\n  return (\n    <span {...props} className={clsx(className, 'flex flex-1 overflow-hidden text-zinc-500 before:w-2 before:min-w-0 before:shrink group-data-focus/option:text-white dark:text-zinc-400')}>\n      <span className=\"flex-1 truncate\">{children}</span>\n    </span>\n  );\n}\n"]}