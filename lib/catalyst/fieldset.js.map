{"version":3,"file":"fieldset.js","sourceRoot":"","sources":["../../../src/catalyst/fieldset.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,QAAQ,MAAM,mBAAmB,CAAC;AAC9C,OAAO,IAAI,MAAM,MAAM,CAAC;AAGxB,MAAM,UAAU,QAAQ,CAAC,EAAE,SAAS,EAAE,GAAG,KAAK,EAA6E;IACzH,OAAO,KAAC,QAAQ,CAAC,QAAQ,OAAK,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,wDAAwD,CAAC,GAAI,CAAC;AAChI,CAAC;AAED,MAAM,UAAU,MAAM,CAAC,EAAE,SAAS,EAAE,GAAG,KAAK,EAA2E;IACrH,OAAO,KAAC,QAAQ,CAAC,MAAM,iBAAW,QAAQ,KAAK,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,+FAA+F,CAAC,GAAI,CAAC;AACxL,CAAC;AAED,MAAM,UAAU,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,KAAK,EAAyC;IACvF,OAAO,2BAAe,SAAS,KAAK,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC,GAAI,CAAC;AACzF,CAAC;AAED,MAAM,UAAU,KAAK,CAAC,EAAE,SAAS,EAAE,GAAG,KAAK,EAA0E;IACnH,OAAO,CACL,KAAC,QAAQ,CAAC,KAAK,OACT,KAAK,EACT,SAAS,EAAE,IAAI,CACb,SAAS,EACT,gDAAgD,EAChD,oDAAoD,EACpD,sDAAsD,EACtD,sDAAsD,EACtD,gDAAgD,EAChD,iCAAiC,CAClC,GACD,CACH,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,KAAK,CAAC,EAAE,SAAS,EAAE,GAAG,KAAK,EAA0E;IACnH,OAAO,KAAC,QAAQ,CAAC,KAAK,iBAAW,OAAO,KAAK,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,6FAA6F,CAAC,GAAI,CAAC;AACpL,CAAC;AAED,MAAM,UAAU,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,KAAK,EAAgF;IAC/H,OAAO,KAAC,QAAQ,CAAC,WAAW,iBAAW,aAAa,KAAK,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,oFAAoF,CAAC,GAAI,CAAC;AACvL,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,EAAE,SAAS,EAAE,GAAG,KAAK,EAAgF;IAChI,OAAO,KAAC,QAAQ,CAAC,WAAW,iBAAW,OAAO,KAAK,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,kFAAkF,CAAC,GAAI,CAAC;AAC/K,CAAC","sourcesContent":["import * as Headless from '@headlessui/react';\nimport clsx from 'clsx';\nimport type React from 'react';\n\nexport function Fieldset({ className, ...props }: { className?: string } & Omit<Headless.FieldsetProps, 'as' | 'className'>) {\n  return <Headless.Fieldset {...props} className={clsx(className, '*:data-[slot=text]:mt-1 [&>*+[data-slot=control]]:mt-6')} />;\n}\n\nexport function Legend({ className, ...props }: { className?: string } & Omit<Headless.LegendProps, 'as' | 'className'>) {\n  return <Headless.Legend data-slot=\"legend\" {...props} className={clsx(className, 'font-semibold text-base/6 text-zinc-950 data-disabled:opacity-50 sm:text-sm/6 dark:text-white')} />;\n}\n\nexport function FieldGroup({ className, ...props }: React.ComponentPropsWithoutRef<'div'>) {\n  return <div data-slot=\"control\" {...props} className={clsx(className, 'space-y-8')} />;\n}\n\nexport function Field({ className, ...props }: { className?: string } & Omit<Headless.FieldProps, 'as' | 'className'>) {\n  return (\n    <Headless.Field\n      {...props}\n      className={clsx(\n        className,\n        '[&>[data-slot=label]+[data-slot=control]]:mt-3',\n        '[&>[data-slot=label]+[data-slot=description]]:mt-1',\n        '[&>[data-slot=description]+[data-slot=control]]:mt-3',\n        '[&>[data-slot=control]+[data-slot=description]]:mt-3',\n        '[&>[data-slot=control]+[data-slot=error]]:mt-3',\n        '*:data-[slot=label]:font-medium'\n      )}\n    />\n  );\n}\n\nexport function Label({ className, ...props }: { className?: string } & Omit<Headless.LabelProps, 'as' | 'className'>) {\n  return <Headless.Label data-slot=\"label\" {...props} className={clsx(className, 'select-none text-base/6 text-zinc-950 data-disabled:opacity-50 sm:text-sm/6 dark:text-white')} />;\n}\n\nexport function Description({ className, ...props }: { className?: string } & Omit<Headless.DescriptionProps, 'as' | 'className'>) {\n  return <Headless.Description data-slot=\"description\" {...props} className={clsx(className, 'text-base/6 text-zinc-500 data-disabled:opacity-50 sm:text-sm/6 dark:text-zinc-400')} />;\n}\n\nexport function ErrorMessage({ className, ...props }: { className?: string } & Omit<Headless.DescriptionProps, 'as' | 'className'>) {\n  return <Headless.Description data-slot=\"error\" {...props} className={clsx(className, 'text-base/6 text-red-600 data-disabled:opacity-50 sm:text-sm/6 dark:text-red-500')} />;\n}\n"]}