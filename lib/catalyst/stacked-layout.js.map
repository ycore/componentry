{"version":3,"file":"stacked-layout.js","sourceRoot":"","sources":["../../../src/catalyst/stacked-layout.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,QAAQ,MAAM,mBAAmB,CAAC;AAE9C,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAEjC,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,EAAE,UAAU,EAAE,MAAM,aAAa,CAAC;AAEzC,SAAS,YAAY;IACnB,OAAO,CACL,2BAAe,MAAM,EAAC,OAAO,EAAC,WAAW,iBAAa,MAAM,YAC1D,eAAM,CAAC,EAAC,6RAA6R,GAAG,GACpS,CACP,CAAC;AACJ,CAAC;AAED,SAAS,aAAa;IACpB,OAAO,CACL,2BAAe,MAAM,EAAC,OAAO,EAAC,WAAW,iBAAa,MAAM,YAC1D,eAAM,CAAC,EAAC,oLAAoL,GAAG,GAC3L,CACP,CAAC;AACJ,CAAC;AAED,SAAS,aAAa,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAqF;IAC5I,OAAO,CACL,MAAC,QAAQ,CAAC,MAAM,IAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAC,WAAW,aAChE,KAAC,QAAQ,CAAC,cAAc,IAAC,UAAU,QAAC,SAAS,EAAC,mJAAmJ,GAAG,EACpM,KAAC,QAAQ,CAAC,WAAW,IAAC,UAAU,QAAC,SAAS,EAAC,uGAAuG,YAChJ,eAAK,SAAS,EAAE,IAAI,CAAC,CAAC,SAAS,IAAI,2BAA2B,EAAE,qFAAqF,CAAC,CAAC,aACrJ,cAAK,SAAS,EAAC,iBAAiB,YAC9B,KAAC,QAAQ,CAAC,WAAW,IAAC,EAAE,EAAE,UAAU,gBAAa,kBAAkB,YACjE,KAAC,aAAa,KAAG,GACI,GACnB,EACL,QAAQ,IACL,GACe,IACP,CACnB,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAsG;IACxK,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IACtD,OAAO,CACL,eAAK,SAAS,EAAE,IAAI,CAAC,CAAC,QAAQ,IAAI,WAAW,EAAE,SAAS,IAAI,8DAA8D,EAAE,uCAAuC,CAAC,CAAC,aAEnK,KAAC,aAAa,IAAC,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,YACjE,OAAO,GACM,EAGhB,kBAAQ,SAAS,EAAC,wBAAwB,aACxC,cAAK,SAAS,EAAC,kBAAkB,YAC/B,KAAC,UAAU,IAAC,OAAO,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAa,iBAAiB,YAC3E,KAAC,YAAY,KAAG,GACL,GACT,EACN,cAAK,SAAS,EAAC,gBAAgB,YAAE,MAAM,GAAO,IACvC,EAGR,QAAQ,IAAI,CACX,eAAM,SAAS,EAAC,mCAAmC,YACjD,cAAK,SAAS,EAAE,IAAI,CAAC,CAAC,gIAAgI,CAAC,CAAC,YACtJ,cAAK,SAAS,EAAC,mBAAmB,YAAE,QAAQ,GAAO,GAC/C,GACD,CACR,IACG,CACP,CAAC;AACJ,CAAC","sourcesContent":["import * as Headless from '@headlessui/react';\nimport type React from 'react';\nimport { useState } from 'react';\n\nimport clsx from 'clsx';\nimport { NavbarItem } from './navbar.js';\n\nfunction OpenMenuIcon() {\n  return (\n    <svg data-slot=\"icon\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n      <path d=\"M2 6.75C2 6.33579 2.33579 6 2.75 6H17.25C17.6642 6 18 6.33579 18 6.75C18 7.16421 17.6642 7.5 17.25 7.5H2.75C2.33579 7.5 2 7.16421 2 6.75ZM2 13.25C2 12.8358 2.33579 12.5 2.75 12.5H17.25C17.6642 12.5 18 12.8358 18 13.25C18 13.6642 17.6642 14 17.25 14H2.75C2.33579 14 2 13.6642 2 13.25Z\" />\n    </svg>\n  );\n}\n\nfunction CloseMenuIcon() {\n  return (\n    <svg data-slot=\"icon\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n      <path d=\"M6.28 5.22a.75.75 0 0 0-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 1 0 1.06 1.06L10 11.06l3.72 3.72a.75.75 0 1 0 1.06-1.06L11.06 10l3.72-3.72a.75.75 0 0 0-1.06-1.06L10 8.94 6.28 5.22Z\" />\n    </svg>\n  );\n}\n\nfunction MobileSidebar({ open, close, className, children }: React.PropsWithChildren<{ open: boolean; close: () => void; className?: string }>) {\n  return (\n    <Headless.Dialog open={open} onClose={close} className=\"lg:hidden\">\n      <Headless.DialogBackdrop transition className=\"fixed inset-0 bg-black/30 transition data-closed:opacity-0 data-enter:duration-300 data-leave:duration-200 data-enter:ease-out data-leave:ease-in\" />\n      <Headless.DialogPanel transition className=\"data-closed:-translate-x-full fixed inset-y-0 w-full max-w-80 p-2 transition duration-300 ease-in-out\">\n        <div className={clsx([className ?? 'bg-white dark:bg-zinc-900', 'flex h-full flex-col rounded-lg shadow-xs ring-1 ring-zinc-950/5 dark:ring-white/10'])}>\n          <div className=\"-mb-3 px-4 pt-3\">\n            <Headless.CloseButton as={NavbarItem} aria-label=\"Close navigation\">\n              <CloseMenuIcon />\n            </Headless.CloseButton>\n          </div>\n          {children}\n        </div>\n      </Headless.DialogPanel>\n    </Headless.Dialog>\n  );\n}\n\nexport function StackedLayout({ navbar, sidebar, className, children }: React.PropsWithChildren<{ navbar: React.ReactNode; sidebar: React.ReactNode; className?: string }>) {\n  const [showSidebar, setShowSidebar] = useState(false);\n  return (\n    <div className={clsx([children && 'min-h-svh', className ?? 'bg-white lg:bg-zinc-100 dark:bg-zinc-900 dark:lg:bg-zinc-950', 'relative isolate flex w-full flex-col'])}>\n      {/* Sidebar on mobile */}\n      <MobileSidebar open={showSidebar} close={() => setShowSidebar(false)}>\n        {sidebar}\n      </MobileSidebar>\n\n      {/* Navbar */}\n      <header className=\"flex items-center px-4\">\n        <div className=\"py-2.5 lg:hidden\">\n          <NavbarItem onClick={() => setShowSidebar(true)} aria-label=\"Open navigation\">\n            <OpenMenuIcon />\n          </NavbarItem>\n        </div>\n        <div className=\"min-w-0 flex-1\">{navbar}</div>\n      </header>\n\n      {/* Content */}\n      {children && (\n        <main className=\"flex flex-1 flex-col pb-2 lg:px-2\">\n          <div className={clsx(['grow p-6 lg:rounded-lg lg:bg-white lg:p-10 lg:shadow-xs lg:ring-1 lg:ring-zinc-950/5 dark:lg:bg-zinc-900 dark:lg:ring-white/10'])}>\n            <div className=\"mx-auto max-w-6xl\">{children}</div>\n          </div>\n        </main>\n      )}\n    </div>\n  );\n}\n"]}