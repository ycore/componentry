{"version":3,"file":"NavMenu.js","sourceRoot":"","sources":["../../../src/common/NavMenu.tsx"],"names":[],"mappings":"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","sourcesContent":["import { ChevronDownIcon } from '@heroicons/react/16/solid';\nimport { Fragment, type JSX } from 'react/jsx-runtime';\n\nimport { Dropdown, Navbar, Sidebar, StackedLayout } from '../catalyst/index.js';\n\nexport type NavConfig = { sections: Array<{ items: NavItem[] }> };\ntype NavItem =\n  | { items: NavItem[] }\n  | { filter?: string[] | boolean[] | number[] }\n  | { filter?: string[] | boolean[] | number[]; heading?: string; label?: never; tag: JSX.Element; url?: never }\n  | {\n      filter?: string[] | boolean[] | number[];\n      heading?: string;\n      label: string;\n      tag?: JSX.Element;\n      url: string;\n    };\n\ninterface NavMenuProps extends React.PropsWithChildren {\n  className?: string;\n  navConfig: NavConfig;\n  stackClass?: string;\n  filters?: string[];\n}\n\nexport function NavMenu({ className, navConfig, stackClass, filters = [], children }: NavMenuProps) {\n  const activeNav = navFilter.filterNavConfig(navConfig, filters);\n\n  return (\n    activeNav.sections.length > 0 && (\n      <StackedLayout\n        className={stackClass}\n        navbar={\n          <Navbar className={className}>\n            {activeNav.sections.map((section, index) => (\n              // biome-ignore lint/suspicious/noArrayIndexKey: navbar sections remain imutable\n              <Navbar.Section key={`navbar-section-${index}`} className=\"max-lg:hidden\">\n                {section.items.map((item, itemIndex) => {\n                  if (item.items) {\n                    const headingItem = item.items.find(subItem => subItem.heading);\n                    const remainderItems = headingItem ? item.items.filter(subItem => subItem !== headingItem) : item.items;\n\n                    return (\n                      // biome-ignore lint/suspicious/noArrayIndexKey: navbar items remain imutable\n                      <Dropdown key={`dropdown-${itemIndex}`}>\n                        <Dropdown.Button as={Navbar.Item} className=\"hidden lg:block\">\n                          {headingItem?.tag || <Navbar.Label>{headingItem?.heading}</Navbar.Label>}\n                          <ChevronDownIcon />\n                        </Dropdown.Button>\n                        {/* biome-ignore lint/suspicious/noArrayIndexKey: navbar items remain imutable */}\n                        <Dropdown.Menu key={`dropdown-menu-${itemIndex}`} anchor=\"bottom start\" className=\"min-w-80 lg:min-w-64\">\n                          {remainderItems.map((subItem, subIndex) => (\n                            <Dropdown.Item key={`dropitem-${subIndex}-${subItem.url}`} href={subItem.url}>\n                              {subItem.tag}\n                              {subItem.label && <Dropdown.Label>{subItem.label}</Dropdown.Label>}\n                            </Dropdown.Item>\n                          ))}\n                        </Dropdown.Menu>\n                      </Dropdown>\n                    );\n                  }\n\n                  return (\n                    <Navbar.Item key={`navbar-${itemIndex}-${item.url}`} href={item.url}>\n                      {item.tag}\n                      {item.label && <Navbar.Label>{item.label}</Navbar.Label>}\n                    </Navbar.Item>\n                  );\n                })}\n              </Navbar.Section>\n            ))}\n          </Navbar>\n        }\n        sidebar={\n          <Sidebar>\n            <Sidebar.Body>\n              {activeNav.sections.map((section, index) => {\n                return (\n                  // biome-ignore lint/suspicious/noArrayIndexKey: navbar items remain imutable\n                  <Sidebar.Section key={`sidebar-section-${index}`}>\n                    {section.items.map((item, index) => {\n                      if (item.items) {\n                        return (\n                          // biome-ignore lint/suspicious/noArrayIndexKey: navbar items remain imutable\n                          <Fragment key={index}>\n                            {/* biome-ignore lint/suspicious/noArrayIndexKey: navbar items remain imutable */}\n                            <Sidebar.Divider key={`sidebar-divider-${index}`} />\n                            <Sidebar.Section key={`sidebar-section2-${index}-${item.url}`}>\n                              {item.items.map((item, index) => {\n                                return (\n                                  <Sidebar.Item key={`sidebar-${index}-${item.url}`} href={item.url}>\n                                    {item.tag}\n                                    {item.label && <Sidebar.Label>{item.label}</Sidebar.Label>}\n                                  </Sidebar.Item>\n                                );\n                              })}\n                            </Sidebar.Section>\n                          </Fragment>\n                        );\n                      }\n\n                      return (\n                        <Sidebar.Item key={`sidebar-${index}-${item.url}`} href={item.url ?? '#'}>\n                          {item.tag}\n                          {item.label && <Sidebar.Label>{item.label}</Sidebar.Label>}\n                        </Sidebar.Item>\n                      );\n                    })}\n                  </Sidebar.Section>\n                );\n              })}\n            </Sidebar.Body>\n          </Sidebar>\n        }\n      >\n        {children}\n      </StackedLayout>\n    )\n  );\n}\n\nconst navFilter = {\n  /**\n   * Filters navigation configuration based on provided filter parameters\n   * @param navConfig - The navigation configuration object\n   * @param filterParams - Array of filter items to include (e.g. ['signed-in'])\n   * @returns A filtered copy of the navigation configuration\n   */\n  filterNavConfig: (navConfig: NavConfig, filterParams: string[]): NavConfig => {\n    const filteredNav: NavConfig = {\n      sections: navConfig.sections.map(section => {\n        if (navFilter.shouldIncludeItemsArray(section.items, filterParams)) {\n          return { ...section, items: navFilter.filterNavItems(section.items, filterParams) };\n        }\n        return { ...section, items: [] };\n      }),\n    };\n\n    return filteredNav;\n  },\n\n  /**\n   * Checks if an items array should be included based on filter parameters\n   * If any item in the array has a filter that doesn't match, the entire array should be excluded\n   * @param items - Array of navigation items\n   * @param filterParams - Filter parameters to match against\n   * @returns boolean indicating if the items array should be included\n   */\n  shouldIncludeItemsArray: (items, filterParams: string[]): boolean => {\n    if (!items || !Array.isArray(items)) {\n      return true;\n    }\n\n    for (const item of items) {\n      if (item.filter) {\n        const hasMatchingFilter = item.filter.some((filterValue: string) => filterParams.includes(filterValue));\n\n        if (!hasMatchingFilter) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Recursively filters navigation items based on filter parameters\n   * @param items - Array of navigation items\n   * @param filterParams - Array of filter items to include\n   * @returns Filtered array of navigation items\n   */\n  filterNavItems: (items, filterParams: string[]) => {\n    if (!items || !Array.isArray(items)) {\n      return [];\n    }\n\n    const result = [];\n\n    for (const item of items) {\n      const newItem = { ...item };\n\n      if (newItem.items && Array.isArray(newItem.items)) {\n        if (!navFilter.shouldIncludeItemsArray(newItem.items, filterParams)) {\n          continue;\n        }\n        newItem.items = navFilter.filterNavItems(newItem.items, filterParams);\n      }\n\n      result.push(newItem);\n    }\n\n    return result;\n  },\n};\n"]}